Rendszertervek

1.Rendszer célja
A rendszer célja, hogy a játékos legyőzze az ellenfelét Blackjack játékban.
A játékos képes tétet tenni, ahogy az ellenfele is, aki nyer az viszi mindet amit feltettek tétnek, és az hozzá lesz adva a nyertes számlájára.
A játékhoz regisztrálni kell és belépni, hogy használjuk.
A számla egyenlege minden játék után mentésre kerül, így ha újra játszani szeretnénk akkor ugyanonnan kezdhetjük ahol befejeztük.
A játék a hagyományos Huszonegy szabályai szerint lesz értelmezve, a szabályokat a "Szabályok" oldalon lehet megtalálni és elolvasni.
Ha a játékosnak elfogy az egyenlege akkor újra kell kezdenie a játékot, a cél, hogy elnyerjük ellenfelünk összes zsetonját.

4. Funkcionális terv
    Rendszerszereplők:
        - Játékos
        - Admin
    Rendszerhasználati esetek és lefutásaik:
        Játékos:
            - Regisztráció az oldalra
            - Saját adatainak módosítása
            - Regisztráció törlése
            - A játékban való részvétel
        Admin:
            - Minden adathoz hozzáfér
            - Felhasználok adatainak módosítása

5. Fizikai környezet
Az alkalmazás webes platformra készül.
Van tűzfal a hálózaton és engedélyezi a 80-as (HTTP) és a 443-as (HTTPS) portokat.
Nincsenek megvásárolt komponenseink.
Fejlesztői eszközök:
    - Visual Studio Code / Netbeans / IntelliJ WebStorm
    - WAMP server
    - git

6. Architekturális terv
    Backend:
        A rendszerhez szükség van egy adatbázis szerverre,
        ebben az esetben MySQL-t használunk.
        A kliens oldali programokat egy PHP alapú REST API szolgálja ki,
        ez csatlakozik az adatbázis szerverhez.
        A kliensekkel JSON objebktumokkal kommunikál.
    Web kliens:
        A webalkalmazás JavaScript haszálatával készül el.
        A REST API-hoz a user belépését követően egyedi api-key segítségével
        lehet hozzáférni, ez biztosítja, hogy illetéktelen felhasználok ne
        módosíthassák az adatokat.